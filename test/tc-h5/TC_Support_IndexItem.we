<template>
  <div onclick="redirect">
    <div class="list-cell-div">
      <text class="list-cell-link font" onclick="redirect">{{text}}</text>
    </div>
    <div class="div-split"></div>
  </div>
</template>

<style>
.list-cell-div{flex-direction: column;background-color:#ffffff;justify-content:center; height: 60; padding-left: 20; background-color: #ffffff; }
.font{font-family: Times New Roman;}
.list-cell-link{ font-size: 30;text-decoration: underline; color: #33a3dc;}
.div-split{height: 1; border-width: 1; border-style:dashed; border-color: #375830;}
</style>

<script>
  module.exports = {
    data: {
      text:'',
      appConfig:''
    },
    methods: {
      ready: function () {
        this.$getConfig(function (config) {
            this.appConfig = config;
        }.bind(this));
      },
      redirect:function (e) {
        var bundleUrl = this.appConfig.bundleUrl;
        var randomIndex = bundleUrl.lastIndexOf("random=");
        if(randomIndex>=0){
          bundleUrl=bundleUrl.substring(0,randomIndex-1);
        }

        var _appName = this.appConfig.env.appName;
        var lastIndex = bundleUrl.lastIndexOf('/build/');
        if(lastIndex<0){
          var message = "link not contains `/build/`;bundleUrl:"+bundleUrl;
          var okTitle = "OK";
          var params = {
            'message':message,
            'okTitle':okTitle,
          }
          this.$call('modal','alert',params,function() {});
          return;
        }

        var prefix=bundleUrl.substring(0,lastIndex + 7);
        var suffix=bundleUrl.substring(lastIndex + 7,bundleUrl.length);
        var jsIndex=suffix.indexOf(".js");
        if(jsIndex>=0){
          suffix=suffix.substring(jsIndex,suffix.length);
        }
        var transferUrl = prefix+this.text+suffix;
        
        this.$openURL(transferUrl);
      }
    }
  }
</script>