<template>
  <TC_Navpage data-role="none" height={{navBarHeight}} background-color="#ff5898" title="社区4" title-color="white" left-item-title="更多" left-item-color="white" right-item-src="http://gtms02.alicdn.com/tps/i2/TB1ED7iMpXXXXXEXXXXWA_BHXXX-48-48.png">
    <scroller style="flex-direction: column; position:absolute; top:0; left:0; right:0; bottom:0; margin-top:{{navBarHeight}}" onclickrightitem = "onclickRightItem">
      <div class="block">
        <text class="discript">App容器（手淘功能）测试指标1：</text>
        <text class="discript">1.数据存储：LocalStorge</text>
        <text class="discript">2.导航体系；</text>
        <text class="discript">3.导航栏设置；</text>
        <text class="discript">测试方法：进入页面，点击每一个文本；</text>
        <text class="discript" value = "gotoHomePage" onclick = "gotoHomePage"></text>
      </div>
      <div class="block">
        <text class="title">01.数据存储</text>
        <text item-id="{{itemId}}" class="noWH" repeat="{{Column_Data_Storage}}" value="{{textValue}}" style="font-size:{{fontSize}}" onclick="clickEvent" event-name="{{eventName}}" parent-name="{{parentName}}"></text>
      </div>
      <div class="block">
        <text class="title">02.导航体系</text>
        <text item-id="{{itemId}}" class="noWH" repeat="{{Column_Navigator}}" value="{{textValue}}" style="font-size:{{fontSize}}" onclick="clickEvent" event-name="{{eventName}}" parent-name="{{parentName}}"></text>
      </div>
      <div class="block">
        <text class="title">03.导航栏设置</text>
        <text item-id="{{itemId}}" class="noWH" repeat="{{Column_NaviBar}}" value="{{textValue}}" style="font-size:{{fontSize}}" onclick="clickEvent" event-name="{{eventName}}" parent-name="{{parentName}}"></text>
      </div>
      <wvweb id="webview" class="web"  src="http://wapp.m.taobao.com/wv/debug/windvane.html#taobao" onpagestart="startload" onpagefinish="finishload" onerror="failload" action-status = {{actionStatus}}>
      </wvweb>
    </scroller>
  </TC_Navpage>
</template>

<style>
  .block {flex-direction: column;border-width:3;border-color:#ffff00;border-style:dotted;overflow: visible;}
  .discript {flex: 1; color: #000000; font-size:30;font-weight: bold; background-color: #37dd23;overflow: visible;font-family: "Open Sans", sans-serif;}
  .title {flex: 1; color: #000000;font-size:35; font-weight: bold; background-color: #ff0000;overflow: visible;font-family: "Open Sans", sans-serif;}
  .hasWH {width:400;background-color:#cccccc;font-size:30;margin:10;overflow: visible;font-family: "Open Sans", sans-serif;}
  .noWH {background-color:#cccccc;font-size:30;margin:10;overflow: visible;font-family: "Open Sans", sans-serif;}
  .support {background-color: #ffff00;font-size:30;overflow: visible;font-family: "Open Sans", sans-serif;}
  .typeBase {width:200;background-color:#00ffff;font-size:30;margin:10;font-family: "Open Sans", sans-serif;}
  .typeCompare {width:500;background-color:#cccccc;font-size:30;margin:10;font-family: "Open Sans", sans-serif;}
  .web {width:750; height:800}
</style>

<script>
  module.exports = {
    data: {
      appConfig:'',
      navBarHeight: 88,
      actionStatus: "none", 
      Column_Data_Storage: [
        {itemId: 'id0101', textValue: '点击后写数据', fontSize:30,eventName:'mutiSet',parentName:'Column_Data_Storage'},
        {itemId: 'id0102', textValue: '点击后读数据', fontSize:30,eventName:'mutiGet',parentName:'Column_Data_Storage'},
        {itemId: 'id0103', textValue: '点击后删数据', fontSize:30,eventName:'clear',parentName:'Column_Data_Storage'},
      ],
      Column_Navigator:[
        {itemId: 'id0201', textValue: '点击后跳转:push', width: 400, height: 30 ,fontSize:40,eventName:'push',parentName:'Column_Navigator'},
        {itemId: 'id0202', textValue: '点击后回退:pop', width: 400, fontSize:40,eventName:'pop',parentName:'Column_Navigator'},
      ],
      Column_NaviBar:[
        {itemId: 'id0301', textValue: '点击后设置Title：setNaviBarTitle', width: 400, fontSize:40,eventName:'setNaviBarTitle',parentName:'Column_NaviBar'},
        {itemId: 'id0302', textValue: '点击后隐藏Title：clearNaviBarTitle', width: 400, fontSize:40,eventName:'clearNaviBarTitle',parentName:'Column_NaviBar'},
        {itemId: 'id0305', textValue: '点击后设置右侧按钮：setNaviBarRightItem', width: 400, fontSize:40,eventName:'setNaviBarRightItem',parentName:'Column_NaviBar'},
        {itemId: 'id0405', textValue: '点击后隐藏右侧按钮：clearNaviBarRightItem', width: 400, fontSize:40,eventName:'clearNaviBarRightItem',parentName:'Column_NaviBar'},
        {itemId: 'id0305', textValue: '点击后设置更多按钮：setNaviBarMoreItem', width: 400, fontSize:40,eventName:'setNaviBarMoreItem',parentName:'Column_NaviBar'},
        {itemId: 'id0405', textValue: '点击后隐藏更多按钮：clearNaviBarMoreItem', width: 400, fontSize:40,eventName:'clearNaviBarMoreItem',parentName:'Column_NaviBar'},
      ],
    },
    methods: {
      /**
      *  view LifeCycle
      */

      onclickRightItem: function (e) {
        nativeLog("onclickRightBtn");
      },

      ready: function (e) {

                // config
        this.$getConfig(function (config) {
            this.appConfig = config;
        }.bind(this));

        nativeLog("TC_App_Frm ready");
        this.$getConfig(function (config) {
          var env = config.env;
          if(env.platform == 'iOS'){
            var scale = env.scale;
            var deviceWidth = env.deviceWidth / scale;
            this.navBarHeight = 64.0 * 750.0 / deviceWidth;
          }
        }.bind(this));

        this.$on('naviBar.rightItem.click',function(e){
          nativeLog("naviBar.rightItem.click");
          var webElement = this.$el('webview');
          this.$call('webview','goForward',webElement.ref);
        });
        this.$on('naviBar.leftItem.click',function(e){
          nativeLog("naviBar.leftItem.click");
          var webElement = this.$el('webview');
          this.$call('webview','goBack',webElement.ref);  
        });
      },

      destroy: function (e) {
        nativeLog("TC_App_Frm destroy");
      },
      viewAppear: function (e) {
        nativeLog("TC_App_Frm viewAppear");
      },
      viewDisAppear: function (e) {
        nativeLog("TC_App_Frm viewDisAppear");
      },

      /**
      *  Data Storage
      */

      mutiSet: function (e,parentName) {
        var vm = this;
        var data = {
          "version": "1.4.0",
          "bundle": "weex-test"
        };

        this.$mutiSet(data, function(e) {
          var data = JSON.parse(e);
          var duration = 2;
          var params = {
            'message':  "写入数据：" + data.result,
            'duration': duration,
          }
          vm.$call('modal','toast',params);
        });
      },
      mutiGet: function (e,parentName) {
        var vm = this;
        vm.$mutiGet(["version","bundle"], function(e) {
          var data = JSON.parse(e);
          var duration = 2;
          var params = {
            'message':  "bundle:" + data.bundle + "\n" + "version:" + data.version,
            'duration': duration,
          }
          vm.$call('modal','toast',params);
        });
      },
      clear: function (e,parentName) {
        var vm = this;
        vm.$mutiRemove(["version","bundle"], function(e) {
          var data = JSON.parse(e);
          var duration = 2;
          var params = {
            'message':  "删除数据：" + data.result,
            'duration': duration,
          }
          vm.$call('modal','toast',params);
        });
      },

      /**
      *  Navigator
      */
      push: function (e,parentName) {        
        var vm = this;
        var params = {
          'url':  this.getTabUrl("TC_TabPage2"),
          // 'url': 'http://30.10.221.249:12580/test/build/TC_TabPage2.js',
          'animated' : 'true',
        }
        vm.$call('navigator','push',params, null);
      },
      pop: function (e,parentName) {
        var vm = this;
        var params = {
          'animated' : 'true',
        }
        vm.$call('navigator','pop', params, null);

      },
      close: function (e,parentName) {
        var vm = this;
        vm.$call('navigator','close',{}, null);
      },

      /**
      *  Navibar Setup
      */

      setNaviBarTitle: function (e,parentName) {
        nativeLog("setNaviBarTitle");
        var params = {
          // 要设置的页面标题
          title: '我是标题',
          titleColor: 'white',
        };
        this.$call('navigator','setNavBarTitle',params,null);
      },

      clearNaviBarTitle: function (e,parentName) {
        nativeLog("clearNaviBarTitle");
        this.$call('navigator','clearNavBarTitle',null,null);
      },

      setNaviBarRightItem: function (e,parentName) {
        nativeLog("setNavBarRightItem");

        var params = {
          // 要设置的图标
          title: 'home',
          titleColor: 'white',
          // 图标是否从 native 中获取
          fromNative: 'true',
          // 客户端中预置的图标是否是 iconFont
          iconFont: 'true',
          autoReset: true
        };
        this.$call('navigator','setNavBarRightItem',params,null);
      },

      clearNaviBarRightItem: function (e,parentName) {
        this.$call('navigator','clearNavBarRightItem',null,null);
        //var webElement = this.$el('webview');
        //this.$call('webview','reload',webElement.ref);
      },

      setNaviBarMoreItem: function (e,parentName) {
        var params = {
        // 需要定制的选项列表
        items: [ {
          // 要设置的图标
          icon: 'home',
          // 图标是否从 native 中获取
          fromNative: 'true',
          // 客户端中预置的图标是否是 iconFont
          iconFont: 'true',
          // 要设置的文本
          text: 'home'
        }, {
          icon: 'tb_icon_navibar_default_right',
          fromNative: 'true',
          text: 'default List'
        }, {
          icon: 'iVBORw0KGgoAAAANSUhEUgAAADgAAAA4BAMAAABaqCYtAAAAGFBMVEX///9bYmxbYmxbYmxbYmxbYmxbYmxbYmwN6C/eAAAAB3RSTlMAufow7PZXjR+zEAAAAFJJREFUeF7tkLENgDAMBB1A1EhZADEBbECXEdIyRNCtT0MBxYuK7q+1zrIv/sVsS5ZCXzlXJSZgirHwoB232QFzDLzYv4Z6rThIvaJxW7d1W3MByIBt+f4fAsMAAAAASUVORK5CYII=',
          text: 'list'
        } ],
        autoReset: true
        };
        this.$call('navigator','setNavBarMoreItem',params,null);
      },

      clearNaviBarMoreItem: function (e,parentName) {
        nativeLog("clearNaviBarMoreItem");
        this.$call('navigator','clearNavBarMoreItem',null,null);
      },

      startload: function (e) {
         nativeLog('startload: e = ' + JSON.stringify(e));

      },

      finishload: function (e) {
        nativeLog('finishload =  e' + JSON.stringify(e));
      },

      failload: function(e) {
        nativeLog('finishload =  e' + JSON.stringify(e));
      },
      gotoHomePage:function(e){
        var vm = this;
        var params={
          biz:"shequ"
        };
        vm.$dispatch('gotoHomePage', params);
        nativeLog("gotoHomePage dispatch");
      },  
      clickEvent: function (e) {
        var eventName = e.target.attr.eventName;
        var parentName = "'"+e.target.attr.parentName+"'";
        eval("this."+eventName+"(e,"+parentName+");");
      },

      getTabUrl:function (tabName){
        var bundleUrl = this.appConfig.bundleUrl;
        nativeLog("bundleUrl in tab==" + bundleUrl);
        var tabName = tabName;
         nativeLog("tabName in tab==" + tabName);

        var navUrl="";
        var lastIndex=bundleUrl.lastIndexOf('build/');
        var  prifixUrl= bundleUrl.substring(0,lastIndex + 6);
        var tplIndex = bundleUrl.indexOf("_wx_tpl=");

        if(tplIndex>= 0){
          navUrl = bundleUrl.substring(tplIndex + 8);
          nativeLog("navUrl==" + navUrl);
          lastIndex = navUrl.lastIndexOf('build/');
          prifixUrl = navUrl.substring(0,lastIndex + 6);
        }
        

        if(lastIndex<0){
          var message = "链接无法识别～";
          var okTitle = "确 定";
          var params = {
            'message':message,
            'okTitle':okTitle,
          }
          this.$call('modal','alert',params);
          return;
        }
        var tabUrl = prifixUrl+ tabName + ".js";
        nativeLog("taburl===" + tabUrl); 
        return tabUrl;
      },
    }
  }
</script>
